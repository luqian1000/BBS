<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">



<mvc:annotation-driven></mvc:annotation-driven>
    <context:component-scan base-package="com.taru.bbs.spring"></context:component-scan>
    <!--扫描daoceng-->
    <context:component-scan base-package="com.taru.bbs.service"></context:component-scan>
    <!--扫描service层-->
    <context:component-scan base-package="com.taru.bbs.mapper"></context:component-scan>
<!--集成Mybatis~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!--集成Mybatis~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 读取属性配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    <!--数据源  连接池  DBCP  C3P0  druid -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${User}" />
        <property name="password" value="${Password}" />
        <!--
           <property name="initialSize" value="${initialSize}"></property>
          连接池最大数量
          <property name="maxActive" value="${maxActive}"></property>
          连接池最大空闲
          <property name="maxIdle" value="${maxIdle}"></property>
          连接池最小空闲
          <property name="minIdle" value="${minIdle}"></property>
          获取连接最大等待时间
          <property name="maxWait" value="${maxWait}"></property>
          <-->
    </bean>
    <!--构建Session工厂  注入数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml"></property>
    </bean>
    <!--扫描mapper接口 自动生成实现类 注入Session工厂 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.taru.bbs.mapper" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!--aop类-->
    <bean id="LogAspect" class="com.taru.bbs.aspectj.LogAspectj"></bean>
        <aop:config>
            <!--切面（一个类）-->
            <aop:aspect id="myAOP" ref="LogAspect">
                <aop:pointcut id="target" expression="execution(* com.taru.bbs.service.*..*(..))"/>
                <aop:before pointcut-ref="target" method="beforeMethod"/>
                <aop:after pointcut-ref="target" method="afterMethod"/>
            </aop:aspect>
        </aop:config>
    <!--事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--< aop:aspect>：定义切面（切面包括通知和切点）-->
    <!--< aop:advisor>：定义通知器（通知器跟切面一样，也包括通知和切点）-->
    <!--< aop:aspect>定义切面时，只需要定义一般的bean就行，而定义< aop:advisor>中引用的通知时，通知必须实现Advice接口。-->
    <aop:config>
        <aop:pointcut id="aopPointcut"
                      expression="execution(* com.taru.bbs.service.*..*(..))" />
        <aop:advisor pointcut-ref="aopPointcut" advice-ref="userTxAdvice" />
    </aop:config>

    <!--声明式事务 -->
    <tx:advice id="userTxAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--概念：从这一点设置的时间点开始（时间点a）到这个事务结束的过程中，其他事务所提交的数据，
            该事务将看不见！（查询中不会出现别人在时间点a之后提交的数据）-->
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="create*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED" isolation="DEFAULT"
                       timeout="-1" read-only="false" rollback-for="java.lang.Exception" />
            <!--<tx:method name="*" read-only="true" />-->
        </tx:attributes>

    </tx:advice>

</beans>